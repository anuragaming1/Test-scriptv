-- Auto chọn team khi chưa có team
spawn(function()
    while wait(1) do
        if LocalPlayer.Team == nil or tostring(LocalPlayer.Team) ~= preferredTeam then
            pcall(function()
                if preferredTeam == "Pirates" then
                    ReplicatedStorage.Remotes.CommF_:InvokeServer("SetTeam", "Pirates")
                elseif preferredTeam == "Marines" then
                    ReplicatedStorage.Remotes.CommF_:InvokeServer("SetTeam", "Marines")
                end
            end)
        end
    end
end)

return 
loadstring(game:HttpGet("https://raw.githubusercontent.com/anuragaming1/Test-scriptv/refs/heads/main/Concak.txt"))()

local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TeleportService = game:GetService("TeleportService")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HRP = Character:WaitForChild("HumanoidRootPart")
local Humanoid = Character:WaitForChild("Humanoid")

-- Cấu hình
local MAX_CHASE_TIME = 45 -- Giây
local MAX_NO_DAMAGE_TIME = 30 -- Giây
local SAFE_HEALTH_THRESHOLD = 0.1 -- 10% máu
local RETURN_HEALTH_THRESHOLD = 0.3 -- 30% máu
local EVADE_HEIGHT = 50 -- Độ cao khi né đòn

-- Biến quản lý
local currentTarget = nil
local currentTween = nil
local isChasing = false
local isEvading = false
local lastDamageTime = 0
local chaseStartTime = 0
local connection = nil
local damageConnection = nil
local humanoidConnection = nil

-- Hàm hủy các kết nối
local function cleanup()
    if connection then
        connection:Disconnect()
        connection = nil
    end
    if damageConnection then
        damageConnection:Disconnect()
        damageConnection = nil
    end
    if humanoidConnection then
        humanoidConnection:Disconnect()
        humanoidConnection = nil
    end
    if currentTween then
        currentTween:Cancel()
        currentTween = nil
    end
end

-- Kiểm tra vùng an toàn hoặc PvP (cần điều chỉnh theo game cụ thể)
local function isInSafeZone(player)
    -- Thêm logic kiểm tra vùng an toàn của game bạn ở đây
    return false
end

-- Kiểm tra damage gần đây
local function setupDamageTracking()
    -- Giả sử game có RemoteEvent để track damage
    -- Đây chỉ là ví dụ, cần điều chỉnh theo game cụ thể
    local damageEvent = ReplicatedStorage:FindFirstChild("DamageEvent") or Instance.new("RemoteEvent")
    damageConnection = damageEvent.OnClientEvent:Connect(function(hitPlayer, damage)
        if hitPlayer == currentTarget then
            lastDamageTime = os.time()
        end
    end)
end

-- Tìm người chơi hợp lệ để target
local function getValidTarget()
    local validPlayers = {}
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local targetHumanoid = player.Character:FindFirstChildOfClass("Humanoid")
            local targetRoot = player.Character:FindFirstChild("HumanoidRootPart")
            
            if targetHumanoid and targetHumanoid.Health > 0 and targetRoot and not isInSafeZone(player) then
                table.insert(validPlayers, player)
            end
        end
    end
    
    -- Sắp xếp theo khoảng cách gần nhất
    table.sort(validPlayers, function(a, b)
        return (HRP.Position - a.Character.HumanoidRootPart.Position).Magnitude < 
               (HRP.Position - b.Character.HumanoidRootPart.Position).Magnitude
    end)
    
    return validPlayers[1]
end

-- Di chuyển đến vị trí
local function moveToPosition(position, speed)
    if currentTween then
        currentTween:Cancel()
    end
    
    local distance = (HRP.Position - position).Magnitude
    local duration = distance / speed
    
    currentTween = TweenService:Create(
        HRP,
        TweenInfo.new(duration, Enum.EasingStyle.Linear),
        {CFrame = CFrame.new(position)}
    )
    currentTween:Play()
    return currentTween
end

-- Bay lên cao để né đòn
local function evade()
    if isEvading then return end
    
    isEvading = true
    local startPos = HRP.Position
    local evadePos = startPos + Vector3.new(0, EVADE_HEIGHT, 0)
    
    moveToPosition(evadePos, 100) -- Tốc độ bay lên nhanh
    
    -- Kiểm tra máu để quay lại
    local checkHealthConn
    checkHealthConn = RunService.Heartbeat:Connect(function()
        if Humanoid.Health / Humanoid.MaxHealth > RETURN_HEALTH_THRESHOLD then
            checkHealthConn:Disconnect()
            isEvading = false
            if currentTarget and currentTarget.Character then
                moveToPosition(currentTarget.Character.HumanoidRootPart.Position, 300)
            end
        end
    end)
end

-- Đổi server
local function changeServer()
    -- Tìm server có nhiều người chơi hơn
    local success, result = pcall(function()
        return TeleportService:GetCurrentServerInstanceId()
    end)
    
    if success then
        TeleportService:TeleportToPlaceInstance(game.PlaceId, result)
    else
        LocalPlayer:Kick("Đang chuyển server...")
        task.wait(2)
        game:GetService("TeleportService"):Teleport(game.PlaceId)
    end
end

-- Bắt đầu đuổi mục tiêu
local function chaseTarget(target)
    if not target or not target.Character then return end
    
    cleanup()
    currentTarget = target
    chaseStartTime = os.time()
    lastDamageTime = os.time()
    
    -- Thiết lập tracking damage
    setupDamageTracking()
    
    -- Theo dõi máu của bản thân
    humanoidConnection = Humanoid.HealthChanged:Connect(function()
        local healthRatio = Humanoid.Health / Humanoid.MaxHealth
        
        if healthRatio < SAFE_HEALTH_THRESHOLD and not isEvading then
            evade()
        end
    end)
    
    -- Vòng lặp đuổi bám chính
    connection = RunService.Heartbeat:Connect(function()
        -- Kiểm tra điều kiện dừng
        if not target or not target.Character or not target.Character:FindFirstChild("HumanoidRootPart") then
            cleanup()
            return
        end
        
        local targetHumanoid = target.Character:FindFirstChildOfClass("Humanoid")
        if not targetHumanoid or targetHumanoid.Health <= 0 then
            cleanup()
            return
        end
        
        -- Kiểm tra thời gian
        local currentTime = os.time()
        if currentTime - lastDamageTime > MAX_NO_DAMAGE_TIME then
            cleanup()
            return
        end
        
        if currentTime - chaseStartTime > MAX_CHASE_TIME then
            cleanup()
            return
        end
        
        -- Kiểm tra vùng an toàn
        if isInSafeZone(target) then
            cleanup()
            return
        end
        
        -- Di chuyển đến mục tiêu
        local targetPos = target.Character.HumanoidRootPart.Position
        if isEvading then
            targetPos = targetPos + Vector3.new(0, EVADE_HEIGHT, 0)
        end
        
        moveToPosition(targetPos, 300) -- Tốc độ di chuyển cao
    end)
end

-- Hàm chính
local function mainLoop()
    while true do
        -- Kiểm tra nếu kill hết người chơi
        if #Players:GetPlayers() <= 1 then
            changeServer()
            break
        end
        
        -- Tìm mục tiêu mới
        local target = getValidTarget()
        
        if target then
            chaseTarget(target)
            
            -- Chờ cho đến khi kết thúc chase (do điều kiện nào đó)
            while connection do
                task.wait(1)
            end
            
            -- Nếu bị kill, đổi server
            if Humanoid.Health <= 0 then
                task.wait(3) -- Chờ respawn
                changeServer()
                break
            end
        else
            task.wait(1)
        end
    end
end

-- Xử lý khi respawn
LocalPlayer.CharacterAdded:Connect(function(newChar)
    Character = newChar
    HRP = newChar:WaitForChild("HumanoidRootPart")
    Humanoid = newChar:WaitForChild("Humanoid")
    
    -- Bắt đầu lại nếu bị kill
    if isChasing then
        task.wait(1) -- Chờ 1s sau khi respawn
        mainLoop()
    end
end)

-- Bắt đầu chương trình
mainLoop()

-- Auto bật PvP liên tục
spawn(function()
    while toggleAutoPvP do
        pcall(function()
            ReplicatedStorage.Remotes.CommF_:InvokeServer("EnablePvp")
        end)
        wait(2)
    end
end)
--// Ultra Auto Combo System (Tự động 100%)
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local RunService = game:GetService("RunService")

-- CẤU HÌNH NÂNG CAO
local Config = {
    AttackRange = 300, -- Phạm vi tấn công
    ComboSpeed = 0.01, -- Tốc độ combo (giây)
    WeaponSwitchDelay = 0.07, -- Thời gian đổi vũ khí
    TargetRefreshRate = 1, -- Tần suất tìm mục tiêu mới (giây)
    SupportSkillsInterval = 7, -- Kích hoạt skill hỗ trợ mỗi (giây)
    AutoPvP = true -- Tự động bật PvP
}

-- DANH SÁCH COMBO TỐI ƯU
local OptimalCombo = {
    {Weapon = "Melee", Key = "C", Priority = 1},
    {Weapon = "Melee", Key = "X", Priority = 2},
    {Weapon = "Fruit", Key = "Z", Priority = 3},
    {Weapon = "Fruit", Key = "X", Priority = 4},
    {Weapon = "Melee", Key = "Z", Priority = 1},
    {Weapon = "Sword", Key = "Z", Priority = 3},
    {Weapon = "Gun", Key = "X", Priority = 2},
    {Weapon = "Fruit", Key = "C", Priority = 4},
    {Weapon = "Sword", Key = "X", Priority = 3},
    {Weapon = "Gun", Key = "Z", Priority = 2},
    {Weapon = "Fruit", Key = "V", Priority = 5},
    {Weapon = "Fruit", Key = "F", Priority = 5}
}

-- HỆ THỐNG VŨ KHÍ
local WeaponSystem = {
    Melee = "One",
    Sword = "Two",
    Gun = "Three",
    Fruit = "Four",
    Current = "Melee"
}

-- BIẾN HỆ THỐNG
local Target = nil
local LastAttack = 0
local SkillCooldowns = {}

-- HÀM NÂNG CAO
local function AdvancedPress(key)
    if not key then return end
    keypress(Enum.KeyCode[key])
    task.wait(0.05)
    keyrelease(Enum.KeyCode[key])
end

local function SwitchWeapon(weaponType)
    if WeaponSystem.Current == weaponType then return end
    local key = WeaponSystem[weaponType]
    if key then
        AdvancedPress(key)
        WeaponSystem.Current = weaponType
        task.wait(Config.WeaponSwitchDelay)
    end
end

-- TỰ ĐỘNG TÌM MỤC TIÊU
local function FindBestTarget()
    local closest = nil
    local minDistance = math.huge
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            local rootPart = player.Character:FindFirstChild("HumanoidRootPart")
            
            if humanoid and humanoid.Health > 0 and rootPart then
                local myRoot = Character:FindFirstChild("HumanoidRootPart")
                if myRoot then
                    local distance = (rootPart.Position - myRoot.Position).Magnitude
                    if distance < Config.AttackRange and distance < minDistance then
                        closest = player
                        minDistance = distance
                    end
                end
            end
        end
    end
    
    return closest
end

-- HỆ THỐNG COMBO TỰ ĐỘNG
local function AutoCombo()
    while task.wait() do
        -- Làm mới mục tiêu
        Target = FindBestTarget()
        
        if Target and Target.Character then
            -- Sắp xếp combo theo độ ưu tiên
            table.sort(OptimalCombo, function(a, b) return a.Priority > b.Priority end)
            
            -- Thực hiện combo
            for _, attack in ipairs(OptimalCombo) do
                SwitchWeapon(attack.Weapon)
                AdvancedPress(attack.Key)
                task.wait(Config.ComboSpeed)
            end
            
            -- Về vũ khí mặc định
            SwitchWeapon("Melee")
        else
            task.wait(Config.TargetRefreshRate)
        end
    end
end

-- TỰ ĐỘNG KĨ NĂNG HỖ TRỢ
local function AutoSkills()
    local skills = {"J", "E", "T", "Y"} -- Aura, Instinct, V3, V4
    while task.wait(Config.SupportSkillsInterval) do
        for _, skill in ipairs(skills) do
            AdvancedPress(skill)
            task.wait(0.1)
        end
    end
end

-- TỰ ĐỘNG PVP
local function ManagePvP()
    if Config.AutoPvP then
        while task.wait(5) do
            pcall(function()
                local pvp = require(LocalPlayer.PlayerScripts.CombatFramework.PvP)
                if pvp and not pvp.active then
                    pvp:Toggle()
                end
            end)
        end
    end
end

-- KHỞI CHẠY HỆ THỐNG
task.spawn(AutoCombo)
task.spawn(AutoSkills)
task.spawn(ManagePvP)

print("🔄 Hệ thống Auto Combo hoàn toàn tự động đã sẵn sàng!")
print("⚔️ Tự động tìm mục tiêu | 🔄 Tự động combo | 🛡️ Tự động kỹ năng")
